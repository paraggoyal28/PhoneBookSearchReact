{"version":3,"sources":["components/AddModal/styles.js","components/AddModal/index.js","components/DisplayModal/styles.js","components/DisplayModal/index.js","components/PhoneBookPage/styles.js","components/PhoneBookPage/index.js","App.js","index.js"],"names":["StyledRow","styled","Row","StyledForm","Form","AddButton","Button","ResetButton","CancelButton","Option","Select","AddModal","addModalVisible","title","closeModal","onFinish","prefixSelector","Item","name","noStyle","style","width","value","useState","formValues","setFormValues","handleChange","form","getFieldsValue","useForm","visible","footer","onCancel","labelCol","span","wrapperCol","scrollToFirstError","label","rules","required","message","onChange","addonBefore","type","disabled","htmlType","onClick","resetFields","defaultProps","RemoveButton","NameRow","NumberRow","CompanyRow","EmailRow","StyledSpan","DisplayModal","firstName","lastName","phoneNumber","email","company","displayModalVisible","closeDisplayModal","removeRecord","fullName","Search","Input","StyledSearch","StyledButton","StyledPhone","div","StyledAvatar","Avatar","props","backgroundcolor","StyledDiv","PhoneBookPage","users","this","searchedUsers","userNames","e","target","placeholder","enterButton","addPhone","map","key","displayModal","userDetails","split","n","toUpperCase","join","React","Component","onSearch","App","setState","getRandomColor","color","i","Math","floor","random","insert","phone","newTrie","copyTrie","children","letter","reference","length","push","console","log","values","state","trie","splice","filter","userName","displayFirstName","displayLastName","displayPhoneNumber","displayCompany","displayEmail","newUsers","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c2729183.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport { Button, Form, Row } from 'antd';\r\n\r\nconst StyledRow = styled(Row)`\r\n    display: flex;\r\n\r\n`;\r\n\r\nconst StyledForm = styled(Form)`\r\n`\r\n\r\nconst AddButton = styled(Button)`\r\n    color: #FFFFFF;\r\n    background: #81B214;\r\n    border-radius: 4px;\r\n    :hover, :active, :focus {\r\n        color: #FFFFFF;\r\n        border: none;\r\n        background: #7EA04D;\r\n    }\r\n`;\r\n\r\nconst ResetButton = styled(Button)`\r\n    background: #FFE05D;\r\n    margin-left: 10px;\r\n    color: #FFFFFF;\r\n    border-radius: 4px;\r\n    :hover, :active, :focus {\r\n        color: #FFFFFF;\r\n        background: #F0A500;\r\n        border: none;\r\n    }\r\n`;\r\n\r\nconst CancelButton = styled(Button)`\r\n    color: #FFFFFF;\r\n    margin-left: 10px;\r\n    background: #C87941;\r\n    border-radius: 4px;\r\n\r\n    :hover, :active, :focus {\r\n        color: #FFFFFF;\r\n        background: #87431D;\r\n        border: none;\r\n    }\r\n`;\r\n\r\nexport { AddButton, StyledRow, ResetButton, CancelButton, StyledForm };","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Input, Select, Modal, Col, Form } from 'antd';\r\nimport { AddButton, StyledRow, ResetButton, CancelButton, StyledForm } from './styles';\r\n\r\nconst { Option } = Select;\r\nconst AddModal = ({ addModalVisible, title, closeModal, onFinish }) => {\r\n    const prefixSelector = (\r\n        <StyledForm.Item name=\"prefix\" noStyle>\r\n            <Select style={{ width: 70 }}>\r\n                <Option value=\"91\">+91</Option>\r\n            </Select>\r\n        </StyledForm.Item>\r\n    );\r\n    const layout = {\r\n        labelCol: { span: 6 },\r\n        wrapperCol: { span: 16 },\r\n    };\r\n    const [formValues, setFormValues] = useState({});\r\n\r\n    const handleChange = (form) => {\r\n        setFormValues(form.getFieldsValue());\r\n    }\r\n\r\n    const [form] = Form.useForm();\r\n    return (\r\n        <Modal title={title} visible={addModalVisible} footer={null} onCancel={closeModal}>\r\n            <StyledForm form={form} {...layout} name=\"registerModal\" scrollToFirstError onFinish={onFinish}>\r\n                <StyledForm.Item name=\"firstName\" label=\"First Name\" rules={[{\r\n                    required: true,\r\n                    message: 'Please enter your first name'\r\n                }]}>\r\n                    <Input onChange={() => handleChange(form)} />\r\n                </StyledForm.Item>\r\n\r\n                <StyledForm.Item name=\"lastName\" label=\"Last Name\">\r\n                    <Input onChange={() => handleChange(form)} />\r\n                </StyledForm.Item>\r\n\r\n                <StyledForm.Item name=\"phone\" label=\"Phone Number\" rules={[{ required: true, message: 'Please input your phone number!' }]}>\r\n                    <Input addonBefore={prefixSelector} style={{ width: '100%' }} onChange={() => handleChange(form)} />\r\n                </StyledForm.Item>\r\n                <StyledForm.Item name=\"email\" label=\"Email Id\" rules={[{\r\n                    type: 'email',\r\n                    message: 'The input is not a valid E-mail!',\r\n                }]}>\r\n                    <Input onChange={() => handleChange(form)} />\r\n                </StyledForm.Item>\r\n                <StyledForm.Item name=\"company\" label=\"Company\">\r\n                    <Input onChange={() => handleChange(form)} />\r\n                </StyledForm.Item>\r\n                <StyledForm.Item>\r\n                    <StyledRow>\r\n                        <Col>\r\n                            <AddButton disabled={!formValues['firstName'] || !formValues['phone']} htmlType=\"submit\">\r\n                                Add\r\n                            </AddButton>\r\n                            <ResetButton onClick={() => form.resetFields()}>\r\n                                Reset\r\n                            </ResetButton>\r\n                            <CancelButton onClick={closeModal}>\r\n                                Cancel\r\n                            </CancelButton>\r\n                        </Col>\r\n                    </StyledRow>\r\n                </StyledForm.Item>\r\n            </StyledForm>\r\n        </Modal>\r\n    )\r\n}\r\n\r\n\r\nAddModal.propTypes = {\r\n    addModalVisible: PropTypes.bool,\r\n    closeModal: PropTypes.func,\r\n    title: PropTypes.string,\r\n    onFinish: PropTypes.func,\r\n};\r\n\r\nAddModal.defaultProps = {\r\n    addModalVisible: false,\r\n    closeModal: () => { },\r\n    onFinish: () => { },\r\n    title: 'Add a phone number'\r\n};\r\n\r\nexport default AddModal;","import styled from 'styled-components';\r\nimport { Button, Row } from 'antd';\r\n\r\nconst RemoveButton = styled(Button)`\r\n    color: #FFFFFF;\r\n    background: #EC0101;\r\n    border-radius: 4px;\r\n    :hover, :active, :focus {\r\n        color: #FFFFFF;\r\n        border: none;\r\n        background: #F05454;\r\n    }\r\n`;\r\n\r\nconst CancelButton = styled(Button)`\r\n    color: #FFFFFF;\r\n    margin-left: 10px;\r\n    background: #C87941;\r\n    border-radius: 4px;\r\n\r\n    :hover, :active, :focus {\r\n        color: #FFFFFF;\r\n        background: #87431D;\r\n        border: none;\r\n    }\r\n`;\r\n\r\nconst StyledRow = styled(Row)`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nconst NameRow = styled(Row)`\r\n    font-family: sans-serif;\r\n    font-size: 18px;\r\n`;\r\n\r\nconst NumberRow = styled(Row)`\r\n    font-family: sans-serif;\r\n    font-size: 18px;\r\n`;\r\n\r\nconst CompanyRow = styled(Row)`\r\n    font-family: sans-serif;\r\n    font-size: 18px;\r\n`;\r\n\r\nconst EmailRow = styled(Row)`\r\n    font-family: sans-serif;\r\n    font-size: 18px;\r\n`;\r\n\r\nconst StyledSpan = styled.span`\r\n    font-weight: 600;\r\n`\r\n\r\nexport { RemoveButton, StyledRow, CancelButton, NameRow, NumberRow, EmailRow, CompanyRow, StyledSpan };","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Modal } from 'antd';\r\nimport { RemoveButton, StyledSpan, NameRow, NumberRow, StyledRow, CancelButton, CompanyRow, EmailRow } from './styles';\r\n\r\nconst DisplayModal = ({ title, firstName, lastName, phoneNumber, email, company, displayModalVisible, closeDisplayModal, removeRecord }) => {\r\n    const fullName = `${firstName} ${lastName}`;\r\n    return (\r\n        <Modal title={title} footer={null} visible={displayModalVisible} onCancel={closeDisplayModal}>\r\n            <NameRow>\r\n                <StyledSpan>FullName</StyledSpan>: {fullName}\r\n            </NameRow>\r\n            <NumberRow>\r\n                <StyledSpan>PhoneNumber</StyledSpan>: {phoneNumber}\r\n            </NumberRow>\r\n            <EmailRow>\r\n                <StyledSpan>Email</StyledSpan>: {email}\r\n            </EmailRow>\r\n            <CompanyRow>\r\n                <StyledSpan>Company</StyledSpan>: {company}\r\n            </CompanyRow>\r\n            <StyledRow>\r\n                <RemoveButton onClick={() => removeRecord(fullName)}>\r\n                    Remove\r\n                </RemoveButton>\r\n                <CancelButton onClick={closeDisplayModal}>\r\n                    Cancel\r\n                </CancelButton>\r\n            </StyledRow>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nDisplayModal.propTypes = {\r\n    title: PropTypes.string,\r\n    lastName: PropTypes.string,\r\n    firstName: PropTypes.string,\r\n    phoneNumber: PropTypes.string,\r\n    email: PropTypes.string,\r\n    company: PropTypes.string,\r\n    closeDisplayModal: PropTypes.func,\r\n    removeRecord: PropTypes.func,\r\n    displayModalVisible: PropTypes.bool,\r\n}\r\n\r\nDisplayModal.defaultProps = {\r\n    title: \"User Details\",\r\n    lastName: \"\",\r\n    firstName: \"\",\r\n    phoneNumber: \"\",\r\n    email: \"\",\r\n    company: \"\",\r\n    displayModalVisible: false,\r\n    removeRecord: () => { },\r\n    closeDisplayModal: () => { },\r\n}\r\n\r\nexport default DisplayModal;","import { Input, Button, Avatar, Row } from 'antd';\r\nimport styled from 'styled-components';\r\nconst { Search } = Input;\r\n\r\n\r\nconst StyledSearch = styled(Search)`\r\n    flex-grow: 1;\r\n`;\r\n\r\nconst StyledInput = styled(Input)`\r\n    flex-grow: 1;\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n    margin-left: 10px;\r\n`;\r\n\r\nconst StyledPhone = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst StyledAvatar = styled(Avatar)`\r\n    background-color: ${props => props.backgroundcolor}\r\n`;\r\n\r\nconst StyledDiv = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst StyledRow = styled(Row)`\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100%;\r\n    margin-top: 5px;\r\n    background-color: #FFF5EA;\r\n`;\r\n\r\nconst StyledSpan = styled.span`\r\n    flex-grow: 1;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nexport { StyledSearch, StyledDiv, StyledButton, StyledInput, StyledRow, StyledAvatar, StyledSpan, StyledPhone }; ","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Tooltip } from 'antd';\r\nimport { StyledSearch, StyledRow, StyledDiv, StyledAvatar, StyledSpan, StyledButton, StyledPhone } from './styles';\r\nimport 'antd/dist/antd.css';\r\n\r\nclass PhoneBookPage extends React.Component {\r\n    render() {\r\n        const users = this.props.value ? this.props.searchedUsers : this.props.userNames;\r\n        return (\r\n            <>\r\n                <StyledDiv>\r\n                    <StyledSearch onChange={(e) => this.props.handleChange(e.target.value)} value={this.props.value} placeholder={this.props.placeholder} enterButton />\r\n                    <StyledButton type=\"primary\" onClick={this.props.addPhone}>Add a phone number</StyledButton>\r\n                </StyledDiv>\r\n                <StyledPhone>\r\n                    {users.map(name =>\r\n                        <StyledRow key={name} onClick={(e) => this.props.displayModal(name)}>\r\n                            <Tooltip title={name}>\r\n                                <StyledAvatar backgroundcolor={this.props.userDetails[name]['color']}>\r\n                                    {name.split(' ').map(n => n[0].toUpperCase()).join('')}\r\n                                </StyledAvatar>\r\n                            </Tooltip>\r\n                            <StyledSpan>\r\n                                {this.props.userDetails[name]['phone']}\r\n                            </StyledSpan>\r\n                        </StyledRow>\r\n                    )}\r\n                </StyledPhone>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nPhoneBookPage.propTypes = {\r\n    placeholder: PropTypes.string,\r\n    onSearch: PropTypes.func,\r\n    addPhone: PropTypes.func,\r\n    userNames: PropTypes.arrayOf(PropTypes.string),\r\n    userDetails: PropTypes.shape({}),\r\n    displayModal: PropTypes.func,\r\n    handleChange: PropTypes.func,\r\n    value: PropTypes.string,\r\n    searchedUsers: PropTypes.arrayOf(PropTypes.string),\r\n};\r\n\r\nPhoneBookPage.defaultProps = {\r\n    placeholder: 'Type phone number',\r\n    onSearch: () => { },\r\n    addPhone: () => { },\r\n    userNames: [],\r\n    userDetails: {},\r\n    displayModal: () => { },\r\n    handleChange: () => { },\r\n    value: '',\r\n    searchedUsers: [],\r\n};\r\n\r\nexport default PhoneBookPage;","import React from 'react';\nimport AddModal from './components/AddModal';\nimport DisplayModal from './components/DisplayModal';\nimport PhoneBookPage from './components/PhoneBookPage';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      addModalVisible: false,\n      displayModalVisible: false,\n      userNames: [],\n      userDetails: {},\n      displayFirstName: '',\n      displayLastName: '',\n      displayPhoneNumber: '',\n      displayEmail: '',\n      displayCompany: '',\n      trie: {\n        '-1': {\n          reference: [],\n          children: {},\n        },\n      },\n      searchedUsers: [],\n      value: ''\n    }\n  }\n\n  addPhone = () => {\n    this.setState({ addModalVisible: true });\n  }\n\n  getRandomColor = () => {\n    const letters = '0123456789ABCDEF';\n    let color = '#';\n    for (var i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  }\n\n  insert = (phone, newTrie, name) => {\n    const copyTrie = newTrie;\n    newTrie = newTrie['-1'].children;\n    for (const letter of phone) {\n      if (newTrie[letter] && newTrie[letter].reference && newTrie[letter].reference.length) {\n        newTrie = newTrie[letter];\n        newTrie.reference.push(name);\n        newTrie = newTrie.children;\n      } else {\n        newTrie[letter] = {\n          reference: [name],\n          children: {},\n        }\n        newTrie = newTrie[letter].children;\n      }\n    }\n    console.log(copyTrie);\n    return copyTrie;\n  }\n\n  onFinish = (values) => {\n    const { userNames, userDetails, trie } = this.state;\n    const name = `${values['firstName']} ${values['lastName']}`;\n    if (!userDetails[name]) {\n      userNames.length === 0 ? userNames.push(name) : userNames.splice(0, 0, name);\n      const email = values['email'];\n      const company = values['company'];\n      const phone = values['phone'];\n      const copyTrie = this.insert(phone, trie, name);\n      userDetails[name] = {\n        email: email,\n        company: company,\n        phone: phone,\n        color: this.getRandomColor(),\n      }\n      this.setState({ trie: copyTrie, userDetails: userDetails, userNames: userNames });\n    }\n  }\n\n  removeRecord = (name) => {\n    const { userNames, userDetails } = this.state;\n    delete userDetails[name];\n    this.setState({ userNames: userNames.filter(userName => userName !== name), userDetails });\n\n  }\n\n  closeDisplayModal = () => {\n    this.setState({ displayModalVisible: false });\n  }\n\n  displayModal = (name) => {\n    const { userDetails } = this.state;\n    this.setState({\n      displayFirstName: name.split(' ')[0], displayLastName: name.split(' ')[1], displayPhoneNumber: userDetails[name].phone,\n      displayCompany: userDetails[name].company, displayEmail: userDetails[name].email, displayModalVisible: true\n    });\n  }\n\n  handleChange = (value) => {\n    const { trie, userNames } = this.state;\n    let newTrie = trie['-1'];\n    for (const letter of value) {\n      newTrie = newTrie.children;\n      if (newTrie[letter] && newTrie[letter].children)\n        newTrie = newTrie[letter];\n      else\n        break;\n    }\n\n    const newUsers = userNames.filter(name => newTrie.reference && newTrie.reference.includes(name));\n    this.setState({ searchedUsers: newUsers || [], value: value });\n  }\n\n\n  closeModal = () => {\n    this.setState({ addModalVisible: false });\n  }\n\n  render() {\n    const { addModalVisible, displayModalVisible, displayFirstName, displayLastName,\n      displayPhoneNumber, displayCompany, displayEmail, userNames, userDetails, searchedUsers, value } = this.state;\n    return (\n      <>\n        <PhoneBookPage handleChange={this.handleChange} searchedUsers={searchedUsers} value={value} userNames={userNames} userDetails={userDetails} addPhone={this.addPhone} displayModal={this.displayModal} />\n        <AddModal addModalVisible={addModalVisible} onFinish={this.onFinish} closeModal={this.closeModal} />\n        <DisplayModal firstName={displayFirstName} lastName={displayLastName} phoneNumber={displayPhoneNumber}\n          email={displayEmail} displayModalVisible={displayModalVisible} closeDisplayModal={this.closeDisplayModal}\n          company={displayCompany} removeRecord={this.removeRecord} />\n      </>\n    )\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}